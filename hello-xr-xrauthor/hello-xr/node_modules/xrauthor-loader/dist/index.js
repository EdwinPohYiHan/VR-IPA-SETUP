"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.loadAuthoringData = void 0;
/**
 * The helper function to load assets generated from XRAuthor.
 * @param topicPath - relative path to the topic directory
 * @param sessionIndex - index of the recorded session to load
 */
function loadAuthoringData(topicPath, sessionIndex) {
    if (sessionIndex === void 0) { sessionIndex = 0; }
    return __awaiter(this, void 0, void 0, function () {
        var authoringData, base, filePath, _a, _b, data, modelNames, _i, _c, anno, _d, _e, _f, _g, name_1, filePath_1, _h, _j;
        return __generator(this, function (_k) {
            switch (_k.label) {
                case 0:
                    console.log('xrauthor-loader is on');
                    authoringData = {
                        meta: {},
                        models: {},
                        video: '',
                        recordingData: {
                            animation: {
                                duration: 0,
                                tracks: {},
                            },
                            modelInfo: {},
                            aspectRatio: 0,
                            videoPlaneDepth: 0,
                            fovInDegrees: 0,
                            isRecordingVisible: true,
                        },
                        editingData: {
                            annotations: [],
                            steps: [],
                        },
                    };
                    base = topicPath.split('/').filter(function (item) { return item.length > 0; }).join('/');
                    console.log('loading topic: ' + base);
                    filePath = base + '/meta/meta.json';
                    console.log('loading meta: ' + filePath);
                    _a = authoringData;
                    return [4 /*yield*/, fetch(filePath).then(function (res) { return res.json(); })];
                case 1:
                    _a.meta = _k.sent();
                    console.log('loading session: ' + sessionIndex);
                    filePath = base + '/videos/' + sessionIndex + '.webm';
                    console.log('loading video: ' + filePath);
                    _b = authoringData;
                    return [4 /*yield*/, fetch(filePath)
                            .then(function (res) { return res.blob(); })
                            .then(function (data) { return URL.createObjectURL(data); })];
                case 2:
                    _b.video = _k.sent();
                    filePath = base + '/recordingData/' + sessionIndex + '.json';
                    console.log('loading recording data: ' + filePath);
                    return [4 /*yield*/, fetch(filePath).then(function (res) { return res.json(); })];
                case 3:
                    data = _k.sent();
                    data.videoPlaneDepth = Math.abs(data.animation.tracks.data[0][1].matrices[0].elements[14]);
                    data.fovInDegrees = 2 * (90 - Math.atan(7) * 180 / Math.PI);
                    data.animation.tracks = data.animation.tracks.data.reduce(function (accumulator, _a) {
                        var _b;
                        var id = _a[0], track = _a[1];
                        return (__assign(__assign({}, accumulator), (_b = {}, _b['m' + id] = track, _b)));
                    }, {});
                    modelNames = data.modelInfo.data.reduce(function (accumulator, _a) {
                        var _b;
                        var id = _a[0], info = _a[1];
                        return (info.name ? __assign(__assign({}, accumulator), (_b = {}, _b[info.name] = id, _b)) : accumulator);
                    }, {});
                    data.modelInfo = data.modelInfo.data.reduce(function (accumulator, _a) {
                        var _b;
                        var id = _a[0], info = _a[1];
                        return (__assign(__assign({}, accumulator), (_b = {}, _b['m' + id] = info, _b)));
                    }, {});
                    authoringData.recordingData = data;
                    filePath = base + '/editingData/' + sessionIndex + '.json';
                    console.log('loading editing data: ' + filePath);
                    return [4 /*yield*/, fetch(filePath).then(function (res) { return res.json(); })];
                case 4:
                    data = _k.sent();
                    for (_i = 0, _c = data.annotations; _i < _c.length; _i++) {
                        anno = _c[_i];
                        anno.anchor.id = 'm' + anno.anchor.id;
                    }
                    authoringData.editingData = data;
                    _d = modelNames;
                    _e = [];
                    for (_f in _d)
                        _e.push(_f);
                    _g = 0;
                    _k.label = 5;
                case 5:
                    if (!(_g < _e.length)) return [3 /*break*/, 8];
                    _f = _e[_g];
                    if (!(_f in _d)) return [3 /*break*/, 7];
                    name_1 = _f;
                    filePath_1 = base + '/models/' + name_1;
                    console.log('loading model file: ' + filePath_1);
                    _h = authoringData.models;
                    _j = name_1;
                    return [4 /*yield*/, fetch(filePath_1)
                            .then(function (res) { return res.blob(); })
                            .then(function (data) { return URL.createObjectURL(data); })];
                case 6:
                    _h[_j] = _k.sent();
                    _k.label = 7;
                case 7:
                    _g++;
                    return [3 /*break*/, 5];
                case 8: return [2 /*return*/, authoringData];
            }
        });
    });
}
exports.loadAuthoringData = loadAuthoringData;
//# sourceMappingURL=index.js.map